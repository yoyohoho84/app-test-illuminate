{"version":3,"sources":["img/1.png","img/2.png","img/3.png","img/4.png","constants.js","sharing-method/index.js","bridge-method/index.js","helpers/dataInput.js","helpers/causeofDeathData.js","helpers/nameBetrothedData.js","helpers/sexPlaceData.js","components/InputItem.js","panels/Home.js","panels/DefaultPanel.js","panels/ResultPanel.js","App.js","index.js"],"names":["APP_ID","GROUP_ID_SUBSCRIPTION_MAIN","USER_ID","Number","URLSearchParams","document","location","search","get","APP_IMG_SHARING_STORIES","sharing","type","openAlert","e","urlSharing","typeState","link","bridge","send","shareLink","then","result","console","log","platform","window","navigator","clipboard","writeText","text","catch","error","copyLink","url","background_type","attachment","story","res","err","storyTask","preventDefault","urlPhotoWall","message","attachments","share","addGroup","group_id","dataInput","id","question","answer_1","answer_2","answer_3","answer_4","causeofDeathData","nameBetrothedData","sexPlaceData","InputItem","top","value","Home","getRandomImg","go","setActivePanel","setIMGresult","publishStories","getPlatform","gotToken","snackbar","renderInputs","map","item","index","className","onClick","stretched","style","height","backgroundColor","marginTop","borderRadius","color","fontSize","DefaultPanel","display","flexDirection","alignItems","justifyContent","fontWeight","margin","width","ResultPanel","IMGresult","openBase","useState","death","setDeath","betrothed","setBetrothed","sex","setSex","useEffect","setTimeout","separator","left","globalURLSharing","background","marginLeft","userSelect","paddingBottom","border","getRandomInt","length","groupIDsubscription","subscribeMessageFromGroupTasks","data-to","App","activePanel","fetchedUser","setUser","popout","setPopout","activeModal","setActiveModal","setSnackbar","userToken","setUserToken","setGetPlatform","setGotToken","duration","layout","onClose","before","size","fill","a","user","subscribe","detail","data","schemeAttribute","createAttribute","scheme","body","attributes","setNamedItem","fetchData","app_id","scope","access_token","subscribeMessageFromGroup","response","getUserToken","currentTarget","dataset","to","isWebView","modal","min","max","Math","ceil","floor","random","linkStories","albumID","method","params","album_id","v","img","img1","img2","img3","img4","fetch","blob","formData","FormData","append","axios","upload_url","headers","hash","photos_list","server","autoclose","APP_IMG_SHARING_WALL","ReactDOM","render","getElementById","default"],"mappings":"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","file":"static/js/main.fb591439.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.f9d395c5.png\";","export default __webpack_public_path__ + \"static/media/2.3651a0ca.png\";","export default __webpack_public_path__ + \"static/media/3.5b1c6ba3.png\";","export default __webpack_public_path__ + \"static/media/4.1f6c3dcb.png\";","export const APP_ID = 7779768;\r\n// TODO: Изменить ссылку на группу\r\nexport const GROUP_ID_ADDED_1 = 5184003;\r\nexport const GROUP_ID_SUBSCRIPTION_MAIN = 203135022;\r\nexport const GROUP_ID_SUBSCRIPTION_2 = 201249621;\r\n\r\nexport const USER_ID = Number(\r\n  new URLSearchParams(document.location.search).get(\"vk_user_id\")\r\n);\r\nexport const NAME_PROJECT = \"ILLUMINATE\";\r\nexport const NAME_PROJECT_LOWER_CASE = \"ILLUMINATE\";\r\nexport const APP_IMG_SHARING_STORIES = [\r\n  \"https://sun9-3.userapi.com/impg/GaGxqCpnlC59LRvDgrvGeUAPohs8zNmIhjzteQ/rbRuFWMdtDI.jpg?size=775x1080&quality=96&sign=421fff7f7a709f761684c82bdfc91a9a&type=album\",\r\n  \"https://sun9-18.userapi.com/impg/QCk_NPunAzBaR3mIXwfKxcduoL1YL9Kg20swCQ/2D1zd88ldEA.jpg?size=775x1080&quality=96&sign=ffa2a40dce7516f20e15a6d47bae3a53&type=album\",\r\n  \"https://sun9-7.userapi.com/impg/G62ZkJOQEdM169chsEmJpoJWUt5neWp4Ojppfw/qNdRgVsWuVc.jpg?size=775x1080&quality=96&sign=5f61effcc120db4e37d6601d67c06f93&type=album\",\r\n  \"https://sun9-51.userapi.com/impg/QfW1AdLgzP9X6kYIpdCLZie-IIOOhD2SxIlECA/-n-5uUBql4w.jpg?size=775x1080&quality=96&sign=591e4c8eb407ac9fdf079d1e82c0d2f7&type=album\",\r\n];\r\n","import bridge from \"@vkontakte/vk-bridge\";\r\nimport {\r\n  APP_ID,\r\n  APP_IMG_SHARING_STORIES,\r\n  GROUP_ID_SUBSCRIPTION_MAIN,\r\n  USER_ID,\r\n} from \"../constants\";\r\n\r\nexport function sharing(type, openAlert, e, urlSharing, typeState) {\r\n  switch (type) {\r\n    case \"share-link\":\r\n      shareLink();\r\n      break;\r\n    case \"copy-link\":\r\n      copyLink(openAlert);\r\n      break;\r\n    case \"story\":\r\n      story(urlSharing);\r\n      break;\r\n    case \"story-task\":\r\n      storyTask(urlSharing, openAlert, typeState);\r\n      break;\r\n    case \"share-wall\":\r\n      share(e, urlSharing);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction shareLink() {\r\n  const link = `https://vk.com/app${APP_ID}`;\r\n  bridge.send(\"VKWebAppShare\", {\r\n    link: link,\r\n  });\r\n}\r\n\r\n// Копирование в буфер\r\nfunction copyLink(openAlert) {\r\n  const link = `https://vk.com/app${APP_ID}`;\r\n  bridge\r\n    .send(\"VKWebAppGetClientVersion\")\r\n    .then((result) => {\r\n      console.log(result.platform);\r\n      if (result.platform === \"web\" || result.platform === \"mobile-web\") {\r\n        window.navigator.clipboard.writeText(link).then(\r\n          () => {\r\n            console.log(\"successfully set\", link);\r\n            openAlert(\"Ссылка скопирована\");\r\n          },\r\n          () => {\r\n            console.log(\"write failed\", link);\r\n          }\r\n        );\r\n      } else {\r\n        bridge.send(\"VKWebAppCopyText\", { text: link });\r\n        openAlert(\"Ссылка скопирована\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"error\", error);\r\n    });\r\n}\r\n\r\n//  Поделиться в истории\r\nfunction story(urlSharing) {\r\n  const url = `https://vk.com/app${APP_ID}#${USER_ID}`;\r\n\r\n  bridge.send(\"VKWebAppShowStoryBox\", {\r\n    background_type: \"image\",\r\n    url: urlSharing,\r\n    attachment: {\r\n      text: \"go_to\",\r\n      type: \"url\",\r\n      url: url,\r\n    },\r\n  });\r\n}\r\n\r\n//  Поделиться в истории по заданию\r\nfunction storyTask(urlSharing, openAlert, typeState) {\r\n  const url = `https://vk.com/public${GROUP_ID_SUBSCRIPTION_MAIN}`;\r\n\r\n  bridge\r\n    .send(\"VKWebAppShowStoryBox\", {\r\n      background_type: \"image\",\r\n      url: urlSharing,\r\n      attachment: {\r\n        text: \"go_to\",\r\n        type: \"url\",\r\n        url: url,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      console.log(\"VKWebAppShowStoryBox res\", res);\r\n      typeState(true);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"VKWebAppShowStoryBox err\", err);\r\n      openAlert(`Чтобы узнать результат, выполните данное задание`, \"red\");\r\n      typeState(false);\r\n    });\r\n}\r\n\r\n//  ДОБАВЛЕНИЕ РЕПОСТА НА СТЕНУ ПОЛЬЗОВАТЕЛЯ\r\nfunction share(e, urlSharing) {\r\n  e.preventDefault();\r\n\r\n  const url = `https://vk.com/app${APP_ID}`;\r\n  const urlPhotoWall = `${urlSharing},https://vk.com/app${APP_ID}`;\r\n  const text = `Узнай если не боишься! Приложение - ${url}`;\r\n\r\n  bridge.send(\"VKWebAppShowWallPostBox\", {\r\n    message: text,\r\n    attachments: urlPhotoWall,\r\n  });\r\n}\r\n","import bridge from \"@vkontakte/vk-bridge\";\r\n//constants\r\nimport { GROUP_ID_SUBSCRIPTION, APP_ID } from \"../constants\";\r\n\r\n// получение токена пользователя\r\nexport function getUserToken(setUserToken, setGotToken) {\r\n  bridge\r\n    .send(\"VKWebAppGetAuthToken\", {\r\n      app_id: APP_ID,\r\n      scope: \"friends,wall, photo, stories \",\r\n    })\r\n    .then((res) => {\r\n      console.log(\"res:\", res);\r\n      setUserToken(res.access_token);\r\n      subscribeMessageFromGroup();\r\n      setGotToken(true);\r\n    })\r\n    .catch((err) => {\r\n      bridge\r\n        .send(\"VKWebAppGetAuthToken\", {\r\n          app_id: APP_ID,\r\n          scope: \"friends,wall, photo, stories \",\r\n        })\r\n        .then((response) => {\r\n          console.log(\"response:\", response);\r\n          setUserToken(res.access_token);\r\n          subscribeMessageFromGroup();\r\n          setGotToken(true);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error:\", error);\r\n        });\r\n      console.log(\"err:\", err);\r\n    });\r\n}\r\n\r\n// разрешение на отправку сообщений от имени группы\r\nexport function subscribeMessageFromGroupDefault(groupIDsubscription) {\r\n  bridge\r\n    .send(\"VKWebAppAllowMessagesFromGroup\", {\r\n      group_id: groupIDsubscription,\r\n    })\r\n    .then((res) => {\r\n      // console.log(\"subscribeMessageFromGroup result\", res);\r\n    })\r\n    .catch((err) => {\r\n      bridge\r\n        .send(\"VKWebAppAllowMessagesFromGroup\", {\r\n          group_id: groupIDsubscription,\r\n        })\r\n        .then((res) => {\r\n          // console.log(\"subscribeMessageFromGroup result\", res);\r\n        })\r\n        .catch((err) => {\r\n          // console.log(\"subscribeMessageFromGroup result\", err);\r\n        });\r\n    });\r\n}\r\n\r\n// разрешение на отправку сообщений от имени группы\r\nexport function subscribeMessageFromGroupTasks(\r\n  openAlert,\r\n  groupIDsubscription,\r\n  typeState\r\n) {\r\n  bridge\r\n    .send(\"VKWebAppAllowMessagesFromGroup\", {\r\n      group_id: groupIDsubscription,\r\n    })\r\n    .then((res) => {\r\n      // console.log(\"subscribeMessageFromGroup result\", res);\r\n      typeState(true);\r\n    })\r\n    .catch((err) => {\r\n      // console.log(\"subscribeMessageFromGroup result\", err);\r\n\r\n      openAlert(\r\n        `Чтобы узнать результат, разрешите отправку сообщений от имени группы`,\r\n        \"red\"\r\n      );\r\n      typeState(false);\r\n    });\r\n}\r\n\r\n// подписка на группу\r\nexport function addGroup(openAlert, group_id, typeState) {\r\n  console.log(\"add group\");\r\n\r\n  bridge\r\n    .send(\"VKWebAppJoinGroup\", { group_id: group_id })\r\n    .then(({ result }) => {\r\n      console.log(\"VKWebAppJoinGroup res\", result);\r\n      typeState(true);\r\n      // if (result) {\r\n      //   openAlert(\"Вы уже подписаны на группу\");\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      openAlert(\"Подпишитесь на группу, чтобы узнать результат\", \"red\");\r\n      typeState(false);\r\n    });\r\n}\r\n\r\n// добавление сервиса в сообщество\r\nexport function AddToCommunity() {\r\n  bridge\r\n    .send(\"VKWebAppAddToCommunity\", {})\r\n    .then((res) => {\r\n      if (res.group_id) {\r\n        console.log(\"AddToCommunity res:\", res.group_id);\r\n        return true;\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"AddToCommunity err:\", err);\r\n      return false;\r\n    });\r\n}\r\n\r\n// открытие др приложение\r\nexport function goToApp(appID) {\r\n  bridge.send(\"VKWebAppOpenApp\", { app_id: appID, location: \"GLI\" });\r\n}\r\n","export const dataInput = [\r\n  {\r\n    id: 1,\r\n    question: \"Вы старше 18?\",\r\n    answer_1: \"Не выбрано\",\r\n    answer_2: \"Старше\",\r\n    answer_3: \"Младше\",\r\n    answer_4: \"Мне 18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    question: \"У Вас есть хобби?\",\r\n    answer_1: \"Не выбрано\",\r\n    answer_2: \"Да\",\r\n    answer_3: \"Нет\",\r\n    answer_4: \"\",\r\n  },\r\n  {\r\n    id: 3,\r\n    question: \"Вы занимаетесь спортом?\",\r\n    answer_1: \"Не выбрано\",\r\n    answer_2: \"Да\",\r\n    answer_3: \"Нет\",\r\n    answer_4: \"\",\r\n  },\r\n  {\r\n    id: 4,\r\n    question: \"Любите домашних животных?\",\r\n    answer_1: \"Не выбрано\",\r\n    answer_2: \"Да\",\r\n    answer_3: \"Нет\",\r\n    answer_4: \"Нейтрально\",\r\n  },\r\n  {\r\n    id: 5,\r\n    question: \"Левша или правша?\",\r\n    answer_1: \"Не выбрано\",\r\n    answer_2: \"Левша\",\r\n    answer_3: \"Правша\",\r\n    answer_4: \"\",\r\n  },\r\n  {\r\n    id: 6,\r\n    question: \"У вас есть возлюбленный(краш)?\",\r\n    answer_1: \"Не выбрано\",\r\n    answer_2: \"Да\",\r\n    answer_3: \"Нет\",\r\n    answer_4: \"\",\r\n  },\r\n  {\r\n    id: 7,\r\n    question: \"Вы верующий человек?\",\r\n    answer_1: \"Не выбрано\",\r\n    answer_2: \"Да\",\r\n    answer_3: \"Нет\",\r\n    answer_4: \"50/50\",\r\n  },\r\n  {\r\n    id: 8,\r\n    question:\r\n      \"Вы бывали на грани смерти? ( Тонули, убегали от маньяка, попадали в аварию и т.д )\",\r\n    answer_1: \"Не выбрано\",\r\n    answer_2: \"Да\",\r\n    answer_3: \"Нет\",\r\n    answer_4: \"\",\r\n  },\r\n  {\r\n    id: 9,\r\n    question: \"Верите в реинкарнацию ( жизнь после смерти )?\",\r\n    answer_1: \"Не выбрано\",\r\n    answer_2: \"Да\",\r\n    answer_3: \"Нет\",\r\n    answer_4: \"\",\r\n  },\r\n  {\r\n    id: 10,\r\n    question: \"У Вас есть фобии?\",\r\n    answer_1: \"Не выбрано\",\r\n    answer_2: \"Да\",\r\n    answer_3: \"Нет\",\r\n    answer_4: \"\",\r\n  },\r\n];\r\n","export const causeofDeathData = [\r\n  \"Остерегайтесь воды\",\r\n  \"Остерегайтесь машин\",\r\n  \"Остерегайтесь вредных продуктов\",\r\n  \"Остерегайтесь ночных прогулок\",\r\n  \"Остерегайтесь новых знакомств ( будьте бдительнее )\",\r\n  \"Остерегайтесь алкоголя\",\r\n  \"Остерегайтесь самолётов\",\r\n];\r\n","export const nameBetrothedData = [\r\n  \"Иван\",\r\n  \"Сергей\",\r\n  \"Никита\",\r\n  \"Глеб\",\r\n  \"Кирилл\",\r\n  \"Андрей\",\r\n  \"Георгий\",\r\n  \"Александр\",\r\n  \"Алексей\",\r\n  \"Владислав\",\r\n  \"Илья\",\r\n  \"Евгений\",\r\n  \"Егор\",\r\n  \"Павел\",\r\n  \"Олег\",\r\n];\r\n","export const sexPlaceData = [\r\n  \"В машине\",\r\n  \"В клубе\",\r\n  \"Дома\",\r\n  \"В лесу\",\r\n  \"В гостинице\",\r\n  \"В поезде\",\r\n  \"В примерочной\",\r\n  \"В сауне\",\r\n  \"В кальянной\",\r\n];\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { FormItem, NativeSelect } from \"@vkontakte/vkui\";\r\n\r\nconst InputItem = ({ question, answer_1, answer_2, answer_3, answer_4 }) => {\r\n  return (\r\n    <FormItem top={question}>\r\n      <NativeSelect>\r\n        <option value=\"yes\">{answer_1}</option>\r\n        <option value=\"yes\">{answer_2}</option>\r\n        <option value=\"no\">{answer_3}</option>\r\n        <option value=\"no\">{answer_4}</option>\r\n      </NativeSelect>\r\n    </FormItem>\r\n  );\r\n};\r\n\r\nexport { InputItem };\r\n","import React from \"react\";\n\nimport {\n  Panel,\n  PanelHeader,\n  Button,\n  Div,\n  Group,\n  FormItem,\n  NativeSelect,\n} from \"@vkontakte/vkui\";\nimport { dataInput } from \"../helpers\";\nimport { InputItem } from \"../components\";\n\nconst Home = ({\n  id,\n  go,\n  getRandomImg,\n  setIMGresult,\n  setActivePanel,\n  publishStories,\n  getPlatform,\n  gotToken,\n  snackbar,\n}) => {\n  const renderInputs = dataInput.map((item, index) => {\n    return (\n      <InputItem\n        key={item.id}\n        question={item.question}\n        answer_1={item.answer_1}\n        answer_2={item.answer_2}\n        answer_3={item.answer_3}\n        answer_4={item.answer_4}\n      />\n    );\n  });\n\n  return (\n    <Panel id={id}>\n      {/* <PanelHeader></PanelHeader> */}\n      <Div\n        className={\n          getPlatform === \"web\" ? \"imgPanelHomeWeb\" : \"imgPanelHomeMobile\"\n        }\n      >\n        <Group>\n          {renderInputs}\n\n          <FormItem>\n            <Button\n              onClick={() => {\n                getRandomImg(0, 4);\n                gotToken && publishStories();\n                setActivePanel(\"result-panel\");\n              }}\n              // onClick={publishStories}\n              stretched\n              style={{\n                //   width: \"200px\",\n                height: \"60px\",\n                backgroundColor: \"white\",\n                marginTop: \"5px\",\n                borderRadius: \"40px\",\n              }}\n            >\n              <span\n                style={{\n                  color: \"black\",\n                  fontSize: \"20px\",\n                }}\n              >\n                Узнать результат\n              </span>\n            </Button>\n          </FormItem>\n        </Group>\n      </Div>\n      {snackbar}\n    </Panel>\n  );\n};\n\nexport { Home };\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Panel,\r\n  PanelHeader,\r\n  Button,\r\n  Div,\r\n  Group,\r\n  Header,\r\n  Cell,\r\n} from \"@vkontakte/vkui\";\r\n\r\nimport { addGroup } from \"../bridge-method\";\r\n\r\nconst DefaultPanel = ({\r\n  id,\r\n  go,\r\n  openAlert,\r\n  setActivePanel,\r\n  snackbar,\r\n  getPlatform,\r\n}) => {\r\n  // useEffect(() => {\r\n  //   addGroup(true, openAlert);\r\n  // },[])\r\n\r\n  function verificationSubscription() {\r\n    addGroup(openAlert, setActivePanel);\r\n  }\r\n\r\n  return (\r\n    <Panel id={id}>\r\n      <PanelHeader></PanelHeader>\r\n      <Div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          marginTop: \"150px\",\r\n        }}\r\n      >\r\n        {getPlatform === \"web\" ? (\r\n          <Div\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: \"25px\",\r\n              margin: \"0px 10px 0px 10px\",\r\n            }}\r\n          >\r\n            Хотите подписаться на наше сообщество?\r\n          </Div>\r\n        ) : (\r\n          <>\r\n            <Div\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: \"25px\",\r\n                margin: \"0px 10px 0px 10px\",\r\n              }}\r\n            >\r\n              Хотите подписаться на\r\n            </Div>\r\n            <Div\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: \"25px\",\r\n                margin: \"0px 10px 0px 10px\",\r\n              }}\r\n            >\r\n              наше сообщество?\r\n            </Div>\r\n          </>\r\n        )}\r\n\r\n        <Button\r\n          onClick={() => addGroup(openAlert, setActivePanel)}\r\n          style={{\r\n            width: \"200px\",\r\n            height: \"80px\",\r\n            backgroundColor: \"#165df5\",\r\n            marginTop: \"50px\",\r\n            borderRadius: \"45px\",\r\n          }}\r\n        >\r\n          <span\r\n            style={{\r\n              color: \"white\",\r\n              fontSize: \"20px\",\r\n            }}\r\n          >\r\n            Подписаться\r\n          </span>\r\n        </Button>\r\n      </Div>\r\n      {snackbar}\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport { DefaultPanel };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Panel,\r\n  PanelHeader,\r\n  Button,\r\n  Div,\r\n  Group,\r\n  FormItem,\r\n  NativeSelect,\r\n} from \"@vkontakte/vkui\";\r\n\r\nimport { getRandomInt } from \"@vkontakte/vkjs\";\r\n\r\n//constants\r\nimport {\r\n  APP_IMG_SHARING_STORIES,\r\n  GROUP_ID_ADDED_1,\r\n  GROUP_ID_SUBSCRIPTION_2,\r\n  GROUP_ID_SUBSCRIPTION_MAIN,\r\n} from \"../constants\";\r\n\r\nimport { nativeAds } from \"../ads\";\r\nimport { sharing } from \"../sharing-method\";\r\nimport { addGroup, subscribeMessageFromGroupTasks } from \"../bridge-method\";\r\nimport { causeofDeathData, nameBetrothedData, sexPlaceData } from \"../helpers\";\r\n\r\nconst ResultPanel = ({\r\n  id,\r\n  go,\r\n  IMGresult,\r\n  openBase,\r\n  getPlatform,\r\n  openAlert,\r\n  snackbar,\r\n}) => {\r\n  const [death, setDeath] = useState(false);\r\n  const [betrothed, setBetrothed] = useState(false);\r\n  const [sex, setSex] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      // nativeAds();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        separator={false}\r\n        left={\r\n          <Div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <Div\r\n              onClick={() =>\r\n                sharing(\r\n                  \"story\",\r\n                  null,\r\n                  null,\r\n                  APP_IMG_SHARING_STORIES[globalURLSharing.url]\r\n                )\r\n              }\r\n              style={{\r\n                background:\r\n                  \"linear-gradient(90deg, rgba(247,106,171,1) 0%, rgba(0,212,255,1) 100%)\",\r\n                borderRadius: \"9px\",\r\n                marginLeft: \"10px\",\r\n                fontSize: \"14px\",\r\n                height: \"28px\",\r\n                width: \"170px\",\r\n                color: \"white\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                userSelect: \"none\",\r\n              }}\r\n            >\r\n              Поделиться в истории\r\n            </Div>\r\n\r\n            <Div></Div>\r\n          </Div>\r\n        }\r\n      ></PanelHeader>\r\n\r\n      <Div\r\n        className={\r\n          getPlatform === \"web\" ? \"ResultPanelWeb\" : \"ResultPanelMobile\"\r\n        }\r\n        style={{\r\n          paddingBottom: \"20px\",\r\n        }}\r\n\r\n        // style={{\r\n        //   display: \"flex\",\r\n        //   flexDirection: \"column\",\r\n        //   alignItems: \"center\",\r\n        //   justifyContent: \"space-around\",\r\n        //   // height: \"450px\",\r\n\r\n        //   // marginTop: \"150px\",\r\n        // }}\r\n      >\r\n        <Div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n\r\n            // marginTop: \"150px\",\r\n          }}\r\n        >\r\n          {IMGresult}\r\n\r\n          <Div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              width: \"300px\",\r\n\r\n              // marginTop: \"150px\",\r\n            }}\r\n          >\r\n            <Div\r\n              style={{\r\n                color: \"white\",\r\n                fontSize: \"15px\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              ПРИЧИНА СМЕРТИ\r\n            </Div>\r\n            <Div>\r\n              {\" \"}\r\n              <Button\r\n                onClick={() => addGroup(openAlert, GROUP_ID_ADDED_1, setDeath)}\r\n                style={{\r\n                  width: \"60px\",\r\n                  height: \"20px\",\r\n                  backgroundColor: \"white\",\r\n                  marginTop: \"5px\",\r\n                  borderRadius: \"10px\",\r\n                }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    color: \"black\",\r\n                    fontSize: \"13px\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  Узнать\r\n                </span>\r\n              </Button>\r\n            </Div>\r\n          </Div>\r\n          {death && (\r\n            <Div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                width: \"300px\",\r\n                height: \"30px\",\r\n                border: \"solid white 1px\",\r\n                borderRadius: \"15px\",\r\n                margin: \"8px\",\r\n                color: \"white\",\r\n                backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n              }}\r\n            >\r\n              {causeofDeathData[getRandomInt(0, causeofDeathData.length - 1)]}\r\n            </Div>\r\n          )}\r\n\r\n          <Div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              width: \"300px\",\r\n\r\n              // marginTop: \"150px\",\r\n            }}\r\n          >\r\n            <Div\r\n              style={{\r\n                color: \"white\",\r\n                fontSize: \"15px\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              ИМЯ СУЖЕНОГО\r\n            </Div>\r\n            <Div>\r\n              {\" \"}\r\n              <Button\r\n                onClick={() =>\r\n                  subscribeMessageFromGroupTasks(\r\n                    openAlert,\r\n                    GROUP_ID_SUBSCRIPTION_2,\r\n                    setBetrothed\r\n                  )\r\n                }\r\n                style={{\r\n                  width: \"60px\",\r\n                  height: \"20px\",\r\n                  backgroundColor: \"white\",\r\n                  marginTop: \"5px\",\r\n                  borderRadius: \"10px\",\r\n                }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    color: \"black\",\r\n                    fontSize: \"13px\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  Узнать\r\n                </span>\r\n              </Button>\r\n            </Div>\r\n          </Div>\r\n\r\n          {betrothed && (\r\n            <Div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                width: \"300px\",\r\n                height: \"30px\",\r\n                border: \"solid white 1px\",\r\n                borderRadius: \"15px\",\r\n                margin: \"8px\",\r\n                color: \"white\",\r\n                backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n              }}\r\n            >\r\n              {nameBetrothedData[getRandomInt(0, nameBetrothedData.length - 1)]}\r\n            </Div>\r\n          )}\r\n\r\n          <Div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              width: \"300px\",\r\n\r\n              // marginTop: \"150px\",\r\n            }}\r\n          >\r\n            <Div\r\n              style={{\r\n                color: \"white\",\r\n                fontSize: \"15px\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              МЕСТО ПЕРВОГО/СЛЕДУЮЩЕГО СЕКСА\r\n            </Div>\r\n            <Div>\r\n              {\" \"}\r\n              <Button\r\n                onClick={() =>\r\n                  sharing(\r\n                    \"story-task\",\r\n                    openAlert,\r\n                    null,\r\n                    APP_IMG_SHARING_STORIES[globalURLSharing.url],\r\n                    setSex\r\n                  )\r\n                }\r\n                style={{\r\n                  width: \"60px\",\r\n                  height: \"20px\",\r\n                  backgroundColor: \"white\",\r\n                  marginTop: \"5px\",\r\n                  borderRadius: \"10px\",\r\n                }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    color: \"black\",\r\n                    fontSize: \"13px\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  Узнать\r\n                </span>\r\n              </Button>\r\n            </Div>\r\n          </Div>\r\n\r\n          {sex && (\r\n            <Div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                width: \"300px\",\r\n                height: \"30px\",\r\n                border: \"solid white 1px\",\r\n                borderRadius: \"15px\",\r\n                margin: \"8px\",\r\n                color: \"white\",\r\n                backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n              }}\r\n            >\r\n              {sexPlaceData[getRandomInt(0, sexPlaceData.length - 1)]}\r\n            </Div>\r\n          )}\r\n\r\n          {/* <Div>\r\n            <Button\r\n              // onClick={openBase}\r\n              onClick={() =>\r\n                sharing(\r\n                  \"story\",\r\n                  null,\r\n                  null,\r\n                  APP_IMG_SHARING_STORIES[globalURLSharing.url]\r\n                )\r\n              }\r\n              style={{\r\n                width: \"300px\",\r\n                height: \"40px\",\r\n                backgroundColor: \"white\",\r\n                marginTop: \"5px\",\r\n                borderRadius: \"10px\",\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: \"black\",\r\n                  fontSize: \"15px\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Поделиться в истории\r\n              </span>\r\n            </Button>\r\n          </Div> */}\r\n          <Div>\r\n            <Button\r\n              onClick={go}\r\n              data-to=\"home\"\r\n              style={{\r\n                width: \"300px\",\r\n                height: \"40px\",\r\n                backgroundColor: \"white\",\r\n                marginTop: \"5px\",\r\n                borderRadius: \"10px\",\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: \"black\",\r\n                  fontSize: \"15px\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Пройти еще раз\r\n              </span>\r\n            </Button>\r\n          </Div>\r\n        </Div>\r\n      </Div>\r\n      {snackbar}\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport { ResultPanel };\r\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport {\n  View,\n  ScreenSpinner,\n  TabbarItem,\n  Epic,\n  Div,\n  Tabbar,\n  ConfigProvider,\n  ActionSheet,\n  ActionSheetItem,\n  Snackbar,\n  Avatar,\n  CellButton,\n} from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport Icon16Done from \"@vkontakte/icons/dist/16/done\";\nimport Icon16Cancel from \"@vkontakte/icons/dist/16/cancel\";\n\nimport img1 from \"./img/1.png\";\nimport img2 from \"./img/2.png\";\nimport img3 from \"./img/3.png\";\nimport img4 from \"./img/4.png\";\n\nimport \"./styles/reset.sass\";\nimport \"./styles/panels.sass\";\nimport \"./styles/img.sass\";\n\n//constants\nimport {\n  APP_IMG_SHARING_STORIES,\n  APP_ID,\n  USER_ID,\n  GROUP_ID_SUBSCRIPTION_MAIN,\n} from \"./constants\";\n\nimport { sharing } from \"./sharing-method\";\nimport { nativeAds } from \"./ads\";\nimport {\n  subscribeMessageFromGroupDefault,\n  getUserToken,\n} from \"./bridge-method\";\n\nimport { Home, DefaultPanel, ResultPanel } from \"./panels\";\nimport axios from \"axios\";\nimport { getRandomInt } from \"@vkontakte/vkjs\";\n\nwindow.globalURLSharing = {\n  url: 0,\n};\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState();\n  const [IMGresult, setIMGresult] = useState(null);\n  const [urlSharing, setUrlSharing] = useState(null);\n  const [activeModal, setActiveModal] = useState(null);\n  const [snackbar, setSnackbar] = useState(null);\n  const [userToken, setUserToken] = useState(\"\");\n  const [getPlatform, setGetPlatform] = useState(\"\");\n  const [gotToken, setGotToken] = useState(false);\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n\n    setTimeout(() => {\n      // nativeAds();\n    }, 1000);\n  }, []);\n\n  useEffect(() => {\n    getUserToken(setUserToken, setGotToken);\n    subscribeMessageFromGroupDefault(GROUP_ID_SUBSCRIPTION_MAIN);\n  }, []);\n\n  useEffect(() => {\n    // Определение ОС\n    bridge\n      .send(\"VKWebAppGetClientVersion\")\n      .then((result) => {\n        setGetPlatform(result.platform);\n        // getPlatform = result.platform;\n\n        console.log(\"result.platform\", getPlatform);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  // https://vk.com/dev/wall.post\n  // https://vk.com/dev/vk_bridge_events_7\n  // https://vk.com/dev/vk_bridge_events_7\n  // https://vk.com/dev/stories.getPhotoUploadServer\n\n  function publishStories() {\n    let albumID;\n\n    // bridge\n    //   .send(\"VKWebAppCallAPIMethod\", {\n    //     method: \"photos.createAlbum\",\n    //     params: {\n    //       title: \"ILLUMINATE TEST\",\n    //       description: `какой то текст`,\n    //       v: 5.21,\n    //       access_token: userToken,\n    //     },\n    //   })\n    //   .then((r) => {\n    // console.log(\"photos.createAlbum r.response.id:\", r.response.id);\n    // albumID = r.response.id;\n    albumID = 278233876;\n    bridge\n      .send(\"VKWebAppCallAPIMethod\", {\n        method: \"photos.getUploadServer\",\n        params: {\n          album_id: albumID,\n          v: 5.21,\n          access_token: userToken,\n        },\n      })\n      .then(async (res) => {\n        console.log(\"photos.getUploadServer res:\", res);\n\n        const img = [img1, img2, img3, img4][getRandomInt(0, 3)];\n\n        const blob = await (await fetch(img)).blob();\n        const formData = new FormData();\n        formData.append(\"file\", blob, \"image.png\");\n\n        const proxy = \"https://26d76bf93c96.ngrok.io\";\n        const { data: result } = await axios({\n          method: \"post\",\n          url: `${proxy}/${res.response.upload_url}`,\n          data: formData,\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n\n        bridge\n          .send(\"VKWebAppCallAPIMethod\", {\n            method: \"photos.save\",\n            params: {\n              album_id: albumID,\n              v: 5.21,\n              access_token: userToken,\n              hash: result.hash,\n              photos_list: result.photos_list,\n              server: result.server,\n            },\n          })\n          .then((response) => {\n            console.log(\"photos.save response:\", response);\n          })\n          .catch((error) => {\n            console.log(\"photos.save error:\", error);\n          });\n      })\n      .catch((err) => {\n        console.log(\"photos.getUploadServer err:\", err);\n      });\n    // })\n    // https://sun9-68.userapi.com/impg/Uq7CA6qSEuTUb_dBr0ptRXcd6neSFMlr_zNT9Q/BIH4qjD2jP0.jpg?size=523x512&quality=96&sign=4cdb1146ea2e61fba2bb9e50ea7f5052&type=album\n    // .catch((er) => {\n    //   console.log(\"photos.createAlbum err:\", er);\n    // });\n  }\n\n  // useEffect(() => {\n  //   console.log(\"userToken:\", userToken);\n\n  // }, []);\n\n  // useEffect(() => {\n  //   // Определение ОС\n  //   bridge\n  //     .send(\"VKWebAppGetClientVersion\")\n  //     .then((result) => {\n  //       setGetPlatform(result.platform);\n  //       // getPlatform = result.platform;\n\n  //       console.log(\"result.platform\", getPlatform);\n  //     })\n  //     .catch((err) => console.log(err));\n  // }, [getPlatform]);\n\n  function openAlert(text, backgroundColor = \"green\") {\n    if (snackbar) return;\n    setSnackbar(\n      <Snackbar\n        duration=\"12000\"\n        layout=\"horizontal\"\n        onClose={() => setSnackbar(null)}\n        before={\n          <Avatar size={24} style={{ backgroundColor }}>\n            {backgroundColor === \"green\" ? (\n              <Icon16Done fill=\"#fff\" width={14} height={14} />\n            ) : (\n              <Icon16Cancel fill=\"#fff\" width={14} height={14} />\n            )}\n          </Avatar>\n        }\n      >\n        {text}\n      </Snackbar>\n    );\n  }\n\n  function openBase() {\n    setActiveModal(null);\n    setPopout(\n      <>\n        <ActionSheet onClose={() => setPopout(null)}>\n          <ActionSheetItem\n            autoclose\n            onClick={() =>\n              sharing(\n                \"share-link\",\n                null,\n                null,\n                APP_IMG_SHARING_WALL[globalURLSharing.url]\n              )\n            }\n          >\n            Поделиться ссылкой\n          </ActionSheetItem>\n          <ActionSheetItem\n            autoclose\n            onClick={() =>\n              sharing(\n                \"copy-link\",\n                openAlert,\n                null,\n                APP_IMG_SHARING_WALL[globalURLSharing.url]\n              )\n            }\n          >\n            Скопировать ссылку\n          </ActionSheetItem>\n          <ActionSheetItem\n            autoclose\n            onClick={() =>\n              sharing(\n                \"story\",\n                null,\n                null,\n                APP_IMG_SHARING_STORIES[globalURLSharing.url]\n              )\n            }\n          >\n            Поделиться в истории\n          </ActionSheetItem>\n          <ActionSheetItem\n            autoclose\n            onClick={(e) =>\n              sharing(\n                \"share-wall\",\n                null,\n                e,\n                APP_IMG_SHARING_WALL[globalURLSharing.url]\n              )\n            }\n          >\n            Поделиться на стене\n          </ActionSheetItem>\n        </ActionSheet>\n      </>\n    );\n  }\n\n  function getRandomImg(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    const result = Math.floor(Math.random() * (max - min)) + min; //Максимум не включается, минимум включается\n\n    globalURLSharing.url = result;\n    // setUrlSharing(result);\n    setIMGresult(<Div className={`icon${result}`}></Div>);\n    console.log({\n      // linkWall: APP_IMG_SHARING_WALL[result],\n      linkStories: APP_IMG_SHARING_STORIES[result],\n      result: result,\n      IMGresult: <Div className={`icon${result}`}></Div>,\n    });\n  }\n\n  const go = (e) => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <ConfigProvider isWebView={true}>\n      <View activePanel={activePanel} popout={popout} modal={activeModal}>\n        <Home\n          id=\"home\"\n          fetchedUser={fetchedUser}\n          go={go}\n          setIMGresult={setIMGresult}\n          getRandomImg={getRandomImg}\n          setActivePanel={setActivePanel}\n          publishStories={publishStories}\n          getPlatform={getPlatform}\n          gotToken={gotToken}\n          openAlert={openAlert}\n          snackbar={snackbar}\n        />\n        <DefaultPanel\n          id=\"default-panel\"\n          fetchedUser={fetchedUser}\n          go={go}\n          openAlert={openAlert}\n          setActivePanel={setActivePanel}\n          snackbar={snackbar}\n          getPlatform={getPlatform}\n        />\n        <ResultPanel\n          id=\"result-panel\"\n          fetchedUser={fetchedUser}\n          go={go}\n          IMGresult={IMGresult}\n          urlSharing={urlSharing}\n          openBase={openBase}\n          getPlatform={getPlatform}\n          openAlert={openAlert}\n          snackbar={snackbar}\n        />\n      </View>\n    </ConfigProvider>\n  );\n};\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// if (process.env.NODE_ENV === \"development\") {\nimport(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n// }\n"],"sourceRoot":""}